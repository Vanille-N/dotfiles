#!/usr/bin/bash

# don't delete for real
rem() { mv "$@" ~/Trash/ ; }

# clever completion function for cd
# looks to CDPATH iff no match in current directory
_clever_cd () { CDPATH= _cd "$@"; if [ -z "$COMPREPLY" ]; then _cd "$@"; fi; }
complete -F _clever_cd -o nospace cd
alias 'cd'='cd >/dev/null'

# move and show
cl() { cd "$@" && ls; }
complete -F _clever_cd -o nospace cl

# various compilers
ctex() { # LaTeX
    base=${1%.*}
    pdflatex --interaction=nonstopmode --halt-on-error $base.tex
}
crs() { # Rust
    base=${1%.*}
    rustc -o $base.exe $base.rs
}
ccc() { # C
    base=${1%.*}
    gcc -o $base.exe $base.c
}
cas() { # ix86 asm
    base=${1%.*}
    gcc -ggdb -o $base $base.s -lm -lc
}
cml() { # OCaml
    base=${1%.*}
    ocamlopt -o $base.exe $base.ml
}

# clippy wrapper
clippy() { base=${1%.*}; ~/.cargo/bin/clippy-driver $base.rs; rm $base; }

mute() { "$@" &>/dev/null; }

# exercism prolog
pltest() {
    swipl -f $1.pl -s $1_tests.plt -g run_tests,halt -t 'halt(1)'
}
irc-crans() {
    if [ "$TERM" = "xterm-kitty" ]; then
        alias ssh='kitty +kitten ssh'
    fi
    ssh -i ~/.ssh/id_rsa -t vanille@zamok.crans.org tmux a -t irc
}

save-home() {
    SRC="$1"
    DEST="$2"
    rsync -rhPavz --filter=':- .gitignore' "$SRC" "$DEST"
}

aurf() {
    pac="$1"
    $pac -Sl \
    | awk '{print $2($4=="" ? "" : " *")}' \
    | fzf --multi --preview "$pac -Si {1}" --reverse \
    | cut -d " " -f 1 \
    | xargs -ro sudo $pac -S
}
alias pacf='aurf pacman'
alias yayf='aurf yay'

aurfs() {
    pac="$1"
    sudo $pac -Sy
    $pac -Qu \
    | fzf --multi --preview "$pac -Si {1}" --reverse
    res=$?
    if [ 130 -ne $res ]; then
        echo y | sudo $pac -Su
    fi
}
alias 'pacf++'='aurfs pacman'
alias 'yayf++'='aurfs yay'

strjoin() { sed ":a; N; \$!ba; s/\n/$1/g"; }

